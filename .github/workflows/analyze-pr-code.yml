name: Analyze PR Code

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: false
        type: string
      repository:
        description: 'Repository (owner/repo)'
        required: false
        type: string
      cursor_api_key:
        description: 'Cursor API Key'
        required: false
        type: string
      test_mode:
        description: 'Use mock data instead of calling Cursor API'
        required: false
        default: false
        type: boolean
      post_comment:
        description: 'Post comment on PR with results'
        required: false
        default: true
        type: boolean
  workflow_call:
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: false
        type: string
      repository:
        description: 'Repository (owner/repo)'
        required: false
        type: string
      post_comment:
        description: 'Post comment on PR with results'
        required: false
        default: true
        type: boolean
      test_mode:
        description: 'Use mock data instead of calling Cursor API'
        required: false
        default: false
        type: boolean
    secrets:
      cursor_api_key:
        description: 'Cursor API Key'
        required: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    outputs:
      results-json: ${{ steps.analyze-step.outputs.results }}
      results-file: analysis-results.json
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
          fetch-depth: 0
      
      - name: Fetch base branch
        run: |
          git fetch origin main:main
          echo "Comparing against origin/main"
          git diff --name-only main...HEAD | head -10
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run analyze PR code script
        id: analyze-step
        run: |
          if [ "${{ inputs.test_mode }}" = "true" ]; then
            python actions/analyze-pr-code/code_analyzer.py --test-mode
          else
            python actions/analyze-pr-code/code_analyzer.py
          fi
          
          # Export results as output (write to file instead of multiline output)
          if [ -f analysis-results.json ]; then
            echo "results_file=analysis-results.json" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN || github.token }}
          CURSOR_API_KEY: ${{ inputs.cursor_api_key || secrets.cursor_api_key || secrets.CURSOR_API_KEY }}
          PR_NUMBER: ${{ inputs.pr_number || github.event.pull_request.number }}
          REPOSITORY: ${{ inputs.repository || github.repository }}
      
      - name: Upload analysis results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: analysis-results
          path: analysis-results.json
          retention-days: 30
      
      - name: Comment analysis results on PR
        if: (inputs.pr_number || github.event.pull_request.number) && (inputs.post_comment == true || inputs.post_comment == null)
        run: |
          python actions/analyze-pr-code/post_comment.py \
            --pr-number "${{ inputs.pr_number || github.event.pull_request.number }}" \
            --repository "${{ inputs.repository || github.repository }}" \
            --results-file analysis-results.json
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN || github.token }}

