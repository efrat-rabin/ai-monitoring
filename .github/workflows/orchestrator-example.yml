name: Orchestrator Example (Main Workflow)

# This is an example of how the main orchestrator workflow would work
# It combines analysis and apply workflows with comment monitoring

on:
  pull_request:
    types: [opened, synchronize]
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  # Job 1: Run analysis when PR is opened/updated
  analyze:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      issues: write
    uses: ./.github/workflows/analyze-pr-code.yml
    with:
      pr_number: ${{ github.event.pull_request.number }}
      repository: ${{ github.repository }}
      post_comment: true
      test_mode: false
    secrets:
      cursor_api_key: ${{ secrets.CURSOR_API_KEY }}
  
  # Job 2: Check for /apply-logs trigger in review comments
  check-apply-trigger:
    if: |
      github.event_name == 'pull_request_review_comment' &&
      contains(github.event.comment.body, '/apply-logs')
    runs-on: ubuntu-latest
    outputs:
      should_apply: ${{ steps.check.outputs.triggered }}
      comment_id: ${{ github.event.comment.id }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Check if trigger is valid
        id: check
        run: |
          # Check if review comment contains /apply-logs
          if echo "${{ github.event.comment.body }}" | grep -q "/apply-logs"; then
            echo "triggered=true" >> $GITHUB_OUTPUT
            echo "comment_body=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
            echo "✅ /apply-logs trigger detected"
          else
            echo "triggered=false" >> $GITHUB_OUTPUT
            echo "ℹ️  No /apply-logs trigger found"
          fi
  
  # Job 3: Get parent review comment with issue details
  get-issue-details:
    if: needs.check-apply-trigger.outputs.should_apply == 'true'
    needs: check-apply-trigger
    runs-on: ubuntu-latest
    outputs:
      comment_body: ${{ steps.get-comment.outputs.body }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install requests
      
      - name: Get parent comment details
        id: get-comment
        run: |
          python actions/apply-suggested-logs/check_apply_trigger.py \
            --pr-number "${{ github.event.pull_request.number }}" \
            --repository "${{ github.repository }}" \
            --output-file trigger-info.json
          
          # Extract parent comment body
          if [ -f trigger-info.json ]; then
            COMMENT_BODY=$(cat trigger-info.json | python3 -c "import sys, json; print(json.load(sys.stdin)['parent_comment_body'])")
            echo "body=$COMMENT_BODY" >> $GITHUB_OUTPUT
            echo "✅ Got parent comment"
          else
            echo "❌ No trigger info found"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
  # Job 4: Apply logging improvements
  apply-logs:
    if: needs.check-apply-trigger.outputs.should_apply == 'true'
    needs: [check-apply-trigger, get-issue-details]
    permissions:
      contents: write
      pull-requests: write
      issues: write
    uses: ./.github/workflows/apply-suggested-logs.yml
    with:
      pr_number: ${{ github.event.pull_request.number }}
      repository: ${{ github.repository }}
      comment_body: ${{ needs.get-issue-details.outputs.comment_body }}
      comment_id: ${{ github.event.comment.id }}
    secrets:
      git_token: ${{ secrets.BOT_GITHUB_TOKEN || github.token }}
      cursor_api_key: ${{ secrets.CURSOR_API_KEY }}

